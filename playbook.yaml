---
- name: Setup kubernetes
  hosts: k8s
  remote_user: ubuntu
  become: true

  vars_files:
    - vars/creds.yaml
    - vars/solution.yaml

  tasks:
  - name: Get IP of cp
    run_once: true
    delegate_to: cp
    command: hostname -i
    register: cp_ip

  - name: Add apt keys
    ansible.builtin.apt_key:
      url: "{{ item }}"
      state: present
    with_items:
      - https://packages.cloud.google.com/apt/doc/apt-key.gpg
      - https://download.docker.com/linux/ubuntu/gpg

  - name: Setup 3rd party repo
    ansible.builtin.apt_repository:
      repo: deb  http://apt.kubernetes.io/  kubernetes-xenial  main
      state: present

  - name: install kubernetes packages
    apt:
      pkg:
        - kubeadm=1.23.1-00
        - kubelet=1.23.1-00
        - kubectl=1.23.1-00
        - containerd
      update_cache: true

  - name: hold k8s packages
    dpkg_selections:
      name: "{{ item }}"
      selection: hold
    with_items:
      - kubeadm
      - kubelet
      - kubectl

  - name: load modules
    modprobe:
      name: "{{ item }}"
      state: present
    with_items:
      - overlay
      - br_netfilter

  - name: Permanent module load
    copy:
      src: files/kubernetes.conf
      dest: /etc/modules-load.d/kubernetes.conf

  - name: Set sysctls
    sysctl:
      name: "{{ item }}"
      value: "1"
      state: present
      sysctl_file: /etc/sysctl.d/kubernetes.conf
    with_items:
      - net.bridge.bridge-nf-call-ip6tables
      - net.bridge.bridge-nf-call-iptables
      - net.ipv4.ip_forward

  - name: Update /etc/hosts
    lineinfile:
      path: /etc/hosts
      line: "{{ cp_ip.stdout }} k8scp"

  - name: Download class materials to cp
    block:

    - name: Download class tarball
      get_url:
        url: https://training.linuxfoundation.org/cm/LFS258/{{ tarball }}
        dest: /home/ubuntu/{{ tarball }}
        username: "{{Â username }}"
        password: "{{ password }}"

    - name: Unpack class tarball
      unarchive:
        src: /home/ubuntu/{{ tarball }}
        dest: /home/ubuntu/
        remote_src: yes

    - name: Copy calico config
      get_url:
        url: https://docs.projectcalico.org/manifests/calico.yaml
        dest: /home/ubuntu/calico.yaml

    - name: Kubeadm config
      copy:
        src: files/kubeadm-config.yaml
        dest: /home/ubuntu/kubeadm-config.yaml

    - name: Kubeadm init script
      copy:
        src: files/kubeadm-init.sh
        dest: /home/ubuntu/kubeadm-init.sh
        mode: +x

    become: false
    when: hostvars[inventory_hostname]['inventory_hostname'] == "cp"

  - name: Bash completion for kubectl
    lineinfile:
      path: /home/ubuntu/.bashrc
      line: source <(kubectl completion bash)
